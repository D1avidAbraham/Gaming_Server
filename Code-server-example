# Use Ubuntu 22.04 as the base image
ARG BASE=ubuntu:jammy
#ARG BASE=nvidia/cuda:12.2.0-base-ubuntu22.04
FROM $BASE

# Update packages and install prerequisites
RUN apt-get update \
  && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    apt-utils \
    build-essential \
    manpages-dev \
    xfce4 \
    xfce4-goodies \
    dbus-x11 \
    x11-xserver-utils \
    xterm \
    npm \
    nodejs \
    default-jre \
    gnupg \
    curl \
    dumb-init \
    git \
    git-lfs \
    htop \
    locales \
    lsb-release \
    man-db \
    python3 \
    nano \
    openssh-client \
    openssh-server \
    procps \
    sudo \
    vim-tiny \
    wget \
    zsh \
    clang \
    mono-complete \
    iproute2 \
    net-tools \
    ssl-cert \
    libswitch-perl \
    libyaml-tiny-perl \
    libhash-merge-simple-perl \
    liblist-moreutils-perl \
    libdatetime-timezone-perl \
    dialog \
  && git lfs install

# Install ZeroTier VPN
RUN curl -s https://install.zerotier.com | bash

# Install Jupyter
#RUN pip install --no-cache-dir jupyterhub jupyterlab

# Install Code-Server

RUN curl -o /tmp/code-server.deb -L "https://github.com/coder/code-server/releases/download/v4.20.0/code-server_4.20.0_amd64.deb"
RUN dpkg -i /tmp/code-server.deb


# Install KasmVNC
RUN wget -P /tmp/ https://github.com/kasmtech/KasmVNC/releases/download/v1.3.3/kasmvncserver_jammy_1.3.3_amd64.deb
RUN apt-get install /tmp/kasmvncserver_*.deb

# Add ROS 2 Humble repository
RUN apt-get update && apt-get install -y software-properties-common \
  && add-apt-repository universe \
  && curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg \
  && echo "deb [signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null


# Install ROS 2 Humble
RUN apt-get update \
  && apt-get install -y \
    ros-humble-desktop \
  && rm -rf /var/lib/apt/lists/*

# Set locale
RUN sed -i "s/# en_US.UTF-8/en_US.UTF-8/" /etc/locale.gen \
  && locale-gen
ENV LANG=en_US.UTF-8


# Install Miniconda
#RUN curl -o /tmp/miniconda.sh -L https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
#RUN  chmod +x /tmp/miniconda.sh && bash /tmp/miniconda.sh -b -p /opt/miniconda && rm /tmp/miniconda.sh

# Add Miniconda to PATH
#ENV PATH="/opt/miniconda/bin:$PATH"

# Install full Anaconda
RUN curl -o /tmp/anaconda.sh -L https://repo.anaconda.com/archive/Anaconda3-2024.02-1-Linux-x86_64.sh
RUN chmod +x /tmp/anaconda.sh && \
    bash /tmp/anaconda.sh -b -p /opt/anaconda && \
    rm /tmp/anaconda.sh

# Add Anaconda to PATH
ENV PATH="/opt/anaconda/bin:$PATH"

RUN pip install --no-cache-dir jupyterhub jupyterlab

# Create a user and configure their environment
RUN useradd -l -u 1000 -G sudo -md /home/david -s /bin/bash -p david david \
    && sed -i.bkp -e '/Defaults\tuse_pty/d' -e 's/%sudo\s\+ALL=(ALL\(:ALL\)\?)\s\+ALL/%sudo ALL=NOPASSWD:ALL/g' /etc/sudoers

#RUN chown -R david:david /home/david

# sets the password for david
RUN echo 'david:12341' | chpasswd


# open this ports
EXPOSE 8080

# whichs to the david user and goes to /home/david
USER david
WORKDIR /home/david

# copies the bashrc
COPY .bashrc /home/david
#RUN echo "source /opt/ros/humble/setup.bash" >> "/home/david/.bashrc"
#RUN source "/home/david/.bashrc"

#RUN sudo chmod 777 /tmp/.bashrc
RUN mkdir -p /home/david/.vnc
RUN mkdir -p /home/david/.jupyter

# copies the config file for kasmVNC
COPY kasmvnc.yaml /home/david/.vnc
#COPY xstartup /home/david/.vnc
#RUN sudo chmod 777 /tmp/kasmvnc.yaml
RUN sudo chown -R david:david /home/david
RUN echo "source /opt/ros/humble/setup.bash" >> "/home/david/.bashrc"
#RUN source "/home/david/.bashrc"
# copies

#RUN cp /tmp/.bashrc /home/david
#RUN cp /tmp/kasmvnc.yaml /home/david
RUN sudo usermod -aG ssl-cert david



SHELL ["/bin/bash", "-c"]

# setup vnc
RUN mkdir -p /home/david/program /home/david/program/.settings /home/david/jupyter
#RUN mkdir -p /home/david/.vnc
#RUN echo '#!/bin/bash\nstartxfce4 &' > /home/david/.vnc/xstartup && chmod +x "/home/david/.vnc/xstartup"

# copies the starter file and make it executable
COPY start_services.sh /usr/local/bin/start_services.sh
RUN sudo chmod +x /usr/local/bin/start_services.sh

# Install Jupyter
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
#RUN sudo npm install -g configurable-http-proxy
#RUN pip install jupyterhub jupyterlab
COPY jupyterhub_config.py /home/david/.jupyter

# runs the file
CMD ["/usr/local/bin/start_services.sh"]